---
- name: Router Setup

  pre_tasks:
    - set_fact:
        ifs: "{{ ansible_facts.interfaces | reject('equalto', 'lo') }}"
    - set_fact:
        external_if: "{{ ansible_facts.default_ipv4.interface }}"
    - set_fact:
        internal_if: "{{ ifs | reject('equalto', external_if) | first }}"
    - set_fact:
        external_if_macaddress: "{{ ansible_facts[external_if].macaddress }}"
    - set_fact:
        internal_if_macaddress: "{{ ansible_facts[internal_if].macaddress }}"

  tasks:
    - name: Set external interface name
      ansible.builtin.template:
        src: templates/link.j2
        dest: /etc/systemd/network/10-extern0.link
        owner: root
        group: root
        mode: '0644'
      vars:
        macaddress: "{{ external_if_macaddress }}"
        ifname: "extern0"
      notify:
        - reboot host

    - name: Set internal interface name
      ansible.builtin.template:
        src: templates/link.j2
        dest: /etc/systemd/network/20-intern0.link
        owner: root
        group: root
        mode: '0644'
      vars:
        macaddress: "{{ internal_if_macaddress }}"
        ifname: "intern0"
      notify:
        - reboot host

    - name: Set external network configuration
      ansible.builtin.template:
        src: templates/dhcp.network.j2
        dest: /etc/systemd/network/external.network
        owner: root
        group: root
        mode: '0644'
      vars:
        ifname: "extern0"
      notify:
        - reboot host

    - name: Set internal network configuration
      ansible.builtin.template:
        src: templates/static.network.j2
        dest: /etc/systemd/network/internal.network
        owner: root
        group: root
        mode: '0644'
      vars:
        ifname: "intern0"
        address_with_netmask: "192.168.100.1/24"
      notify:
        - reboot host

    - name: Completely disable the default networking.service
      ansible.builtin.systemd:
        name: networking.service
        state: stopped
        enabled: no
        masked: yes
    - name: Enable systemd-networkd.service
      ansible.builtin.systemd:
        name: systemd-networkd.service
        state: started
        enabled: yes
        masked: no

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Remove iptables
      ansible.builtin.apt:
        name: iptables
        purge: yes
        state: absent

    - name: Install nftables
      ansible.builtin.apt:
        name: nftables
        state: latest

    - name: Enable nftables.service
      ansible.builtin.systemd:
        name: nftables.service
        state: started
        enabled: yes
        masked: no

    - name: Set up nftables rules
      ansible.builtin.template:
        src: templates/nftables.conf.j2
        dest: /etc/nftables.conf
        owner: root
        group: root
        mode: '0644'
      vars:
        internal_ifname: "intern0"
        external_ifname: "extern0"
        lan_network: "192.168.100.0/24"
      notify:
        - restart nftables

  handlers:
    - name: reboot host
      ansible.builtin.reboot:
    - name: restart nftables
      ansible.builtin.systemd:
        name: nftables.service
        state: restarted
