---
- name: Router Setup
  hosts: debrouter3.crbj.io

  pre_tasks:
    - set_fact:
        ifs: "{{ ansible_facts.interfaces | reject('equalto', 'lo') }}"
    - set_fact:
        external_if: "{{ ansible_facts.default_ipv4.interface }}"
    - set_fact:
        internal_if: "{{ ifs | reject('equalto', external_if) | first }}"
    - set_fact:
        external_if_macaddress: "{{ ansible_facts[external_if].macaddress }}"
    - set_fact:
        internal_if_macaddress: "{{ ansible_facts[internal_if].macaddress }}"

  vars:
    internal_network: "192.168.200.0/24"
    internal_ip: "192.168.200.1"
    internal_netmask: "24"
    internal_domain: "crbj.io"
    dhcp_start: "192.168.200.2"
    dhcp_end: "192.168.200.254"

  tasks:
    - name: Set external interface name
      ansible.builtin.template:
        src: templates/link.j2
        dest: /etc/systemd/network/10-extern0.link
        owner: root
        group: root
        mode: '0644'
      vars:
        macaddress: "{{ external_if_macaddress }}"
        ifname: "extern0"
      notify:
        - reboot host

    - name: Set internal interface name
      ansible.builtin.template:
        src: templates/link.j2
        dest: /etc/systemd/network/20-intern0.link
        owner: root
        group: root
        mode: '0644'
      vars:
        macaddress: "{{ internal_if_macaddress }}"
        ifname: "intern0"
      notify:
        - reboot host

    - name: Set external network configuration
      ansible.builtin.template:
        src: templates/dhcp.network.j2
        dest: /etc/systemd/network/external.network
        owner: root
        group: root
        mode: '0644'
      vars:
        ifname: "extern0"
      notify:
        - reboot host

    - name: Set internal network configuration
      ansible.builtin.template:
        src: templates/static.network.j2
        dest: /etc/systemd/network/internal.network
        owner: root
        group: root
        mode: '0644'
      vars:
        ifname: "intern0"
        address_with_netmask: "{{ internal_ip }}/{{internal_netmask}}"
      notify:
        - reboot host

    - name: Completely disable the default networking.service
      ansible.builtin.systemd:
        name: networking.service
        state: stopped
        enabled: no
        masked: yes

    - name: Enable systemd-networkd.service
      ansible.builtin.systemd:
        name: systemd-networkd.service
        state: started
        enabled: yes
        masked: no

    - name: Reboot if required
      ansible.builtin.meta: flush_handlers

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Remove iptables
      ansible.builtin.apt:
        name: iptables
        purge: yes
        state: absent

    - name: Install nftables
      ansible.builtin.apt:
        name: nftables
        state: latest

    - name: Enable nftables.service
      ansible.builtin.systemd:
        name: nftables.service
        state: started
        enabled: yes
        masked: no

    - name: Set up nftables rules
      ansible.builtin.template:
        src: templates/nftables.conf.j2
        dest: /etc/nftables.conf
        owner: root
        group: root
        mode: '0644'
      vars:
        internal_ifname: "intern0"
        external_ifname: "extern0"
        lan_network: "{{ internal_network }}"
      notify:
        - restart nftables

    - name: Ensure Pi-hole configuration directory exists
      ansible.builtin.file:
        path: /etc/pihole
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Configure Pi-hole installation variables
      ansible.builtin.template:
        src: templates/pihole.setupvars.j2
        dest: /etc/pihole/setupVars.conf
        owner: root
        group: root
        mode: '0644'
      vars:
        internal_ifname: "intern0"
        ipv4_address_with_netmask: "{{ internal_ip }}/{{ internal_netmask }}"
        local_domain_name: "{{ internal_domain }}"
        dhcp_range_start: "{{ dhcp_start }}"
        dhcp_range_end: "{{ dhcp_end}}"
        dhcp_router: "{{ internal_ip }}"

    - name: Ensure dnsmasq configuration directory exists
      ansible.builtin.file:
        path: /etc/dnsmasq.d
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Add extra dnsmasq configuration
      ansible.builtin.template:
        src: templates/dnsmasq.extras.j2
        dest: /etc/dnsmasq.d/10-extra.conf
        owner: root
        group: root
        mode: '0644'
      vars:
        local_domain_name: "{{ internal_domain }}"

    - name: Install CA certs
      ansible.builtin.apt:
        name: ca-certificates
        state: latest

    - name: Download Pi-hole installer
      get_url:
        url: https://install.pi-hole.net
        dest: /etc/pihole/basic-install.sh
        owner: root
        group: root
        mode: '0700'

    - name: Install Pi-hole
      command: /etc/pihole/basic-install.sh --unattended

    - name: Completely disable dhcpcd.service
      ansible.builtin.systemd:
        name: dhcpcd.service
        state: stopped
        enabled: no
        masked: yes

  handlers:
    - name: reboot host
      ansible.builtin.reboot:
    - name: restart nftables
      ansible.builtin.systemd:
        name: nftables.service
        state: restarted
